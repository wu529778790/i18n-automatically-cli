name: Test and Publish

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: 📥 Checkout代码
        uses: actions/checkout@v4

      - name: 🟢 设置 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: 📦 安装依赖
        run: npm ci

      - name: 🧹 清理测试环境
        run: |
          rm -rf tests/output/
          rm -rf src/i18n/
          rm -f automatically-i18n-config.json

      - name: 🧪 运行扫描替换测试
        run: npm run test:processor

      - name: ✅ 验证CLI基础功能
        run: |
          # 测试CLI帮助命令
          node lib/cli.js --help

          # 测试版本信息
          node lib/cli.js --version || true

          # 测试初始化命令（非交互模式）
          echo "test" | timeout 10s node lib/cli.js init || true

      - name: 🎯 验证i18n-auto前缀
        run: |
          # 检查生成的语言包是否使用了正确的前缀
          if [ -f "src/i18n/locale/zh.json" ]; then
            echo "检查i18n-auto前缀..."
            grep -q "i18n-auto-" src/i18n/locale/zh.json && echo "✅ i18n-auto前缀验证通过" || echo "❌ 未找到i18n-auto前缀"
          fi

      - name: 📊 测试报告
        if: always()
        run: |
          echo "🏁 测试完成 - Node.js ${{ matrix.node-version }}"
          ls -la tests/ || true

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: 📥 Checkout代码
        uses: actions/checkout@v4

      - name: 🟢 设置 Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: 📦 安装依赖
        run: npm ci

      - name: 🧪 最终测试验证
        run: npm run test:processor

      - name: 🔍 验证包内容
        run: |
          echo "📦 检查即将发布的包内容:"
          npm pack --dry-run

      - name: 🚀 发布到 NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🎉 发布成功通知
        run: |
          echo "🎉 i18n-automatically-cli 发布成功!"
          echo "📦 版本: $(node -p 'require(\"./package.json\").version')"
          echo "🔗 NPM: https://www.npmjs.com/package/i18n-automatically-cli"

  # 自动创建发布草稿（当推送到主分支时）
  create-release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📋 检查是否需要发布
        id: check
        run: |
          # 获取当前版本
          CURRENT_VERSION=$(node -p 'require("./package.json").version')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # 检查是否已存在该版本的tag
          if git tag -l | grep -q "^v$CURRENT_VERSION$"; then
            echo "Tag v$CURRENT_VERSION 已存在，跳过发布"
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            echo "准备发布版本 v$CURRENT_VERSION"
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

      - name: 🏷️ 创建发布草稿
        if: steps.check.outputs.should_release == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check.outputs.current_version }}
          release_name: i18n-automatically-cli v${{ steps.check.outputs.current_version }}
          draft: true
          prerelease: false
          body: |
            ## 🚀 i18n-automatically-cli v${{ steps.check.outputs.current_version }}

            ### ✨ 新特性
            - 使用 `i18n-auto-` 前缀的翻译键，提升品牌识别度
            - 优化的中文字符串扫描和替换算法
            - 支持 JavaScript、TypeScript、React、Vue 等多种文件类型

            ### 🛠️ 改进
            - 更准确的AST解析和代码生成
            - 自动清理测试数据，不污染git历史
            - 完整的CI/CD流程确保代码质量

            ### 📦 安装使用
            ```bash
            npm install -g i18n-automatically-cli
            i18n-auto --help
            ```

            ### 🧪 本次测试
            - ✅ 多版本Node.js兼容性测试
            - ✅ 扫描替换功能验证
            - ✅ i18n-auto前缀验证

            ---

            **完整更新日志请查看 [CHANGELOG.md](./CHANGELOG.md)**
